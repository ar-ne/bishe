{
  "openapi": "3.0.0",
  "info": {
    "title": "exam-back",
    "version": "1.0.0",
    "description": "",
    "contact": {}
  },
  "paths": {
    "/answers/count": {
      "get": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "count",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "200": {
            "description": "Answer model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Answer.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Answer>"
                }
              }
            }
          }
        ],
        "operationId": "AnswerController.count"
      }
    },
    "/answers/{id}": {
      "put": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "replaceById",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "204": {
            "description": "Answer PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Answer"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AnswerController.replaceById"
      },
      "patch": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "updateById",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "204": {
            "description": "Answer PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AnswerController.updateById"
      },
      "get": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "findById",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "200": {
            "description": "Answer model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AnswerController.findById"
      },
      "delete": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "deleteById",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "204": {
            "description": "Answer DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "AnswerController.deleteById"
      }
    },
    "/answers": {
      "post": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "create",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "200": {
            "description": "Answer model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAnswer"
              }
            }
          }
        },
        "operationId": "AnswerController.create"
      },
      "patch": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "updateAll",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "200": {
            "description": "Answer PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Answer.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Answer>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerPartial"
              }
            }
          }
        },
        "operationId": "AnswerController.updateAll"
      },
      "get": {
        "x-controller-name": "AnswerController",
        "x-operation-name": "find",
        "tags": [
          "AnswerController"
        ],
        "responses": {
          "200": {
            "description": "Array of Answer model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Answer.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AnswerController.find"
      }
    },
    "/files/dl/{filename}": {
      "get": {
        "x-controller-name": "FileUdController",
        "x-operation-name": "downloadFile",
        "tags": [
          "FileUdController"
        ],
        "responses": {
          "200": {
            "description": "The file content",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FileUdController.downloadFile"
      }
    },
    "/files/ls": {
      "get": {
        "x-controller-name": "FileUdController",
        "x-operation-name": "listFiles",
        "tags": [
          "FileUdController"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "A list of files"
          }
        },
        "operationId": "FileUdController.listFiles"
      }
    },
    "/files/u": {
      "post": {
        "x-controller-name": "FileUdController",
        "x-operation-name": "fileUpload",
        "tags": [
          "FileUdController"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Files and fields"
          }
        },
        "requestBody": {
          "description": "Request body for multipart/form-data based file upload",
          "required": true,
          "content": {
            "multipart/form-data": {
              "x-parser": "stream",
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "operationId": "FileUdController.fileUpload"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/questions/count": {
      "get": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "count",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "200": {
            "description": "Question model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Question.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Question>"
                }
              }
            }
          }
        ],
        "operationId": "QuestionController.count"
      }
    },
    "/questions/{id}": {
      "put": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "replaceById",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "204": {
            "description": "Question PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "QuestionController.replaceById"
      },
      "patch": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "updateById",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "204": {
            "description": "Question PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "QuestionController.updateById"
      },
      "get": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "findById",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "200": {
            "description": "Question model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question.Filter"
                }
              }
            }
          }
        ],
        "operationId": "QuestionController.findById"
      },
      "delete": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "deleteById",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "204": {
            "description": "Question DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "QuestionController.deleteById"
      }
    },
    "/questions": {
      "post": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "create",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "200": {
            "description": "Question model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewQuestion"
              }
            }
          }
        },
        "operationId": "QuestionController.create"
      },
      "patch": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "updateAll",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "200": {
            "description": "Question PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Question.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Question>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionPartial"
              }
            }
          }
        },
        "operationId": "QuestionController.updateAll"
      },
      "get": {
        "x-controller-name": "QuestionController",
        "x-operation-name": "find",
        "tags": [
          "QuestionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Question model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "QuestionController.find"
      }
    },
    "/records/count": {
      "get": {
        "x-controller-name": "RecordController",
        "x-operation-name": "count",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "200": {
            "description": "Record model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Record.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Record>"
                }
              }
            }
          }
        ],
        "operationId": "RecordController.count"
      }
    },
    "/records/{id}": {
      "put": {
        "x-controller-name": "RecordController",
        "x-operation-name": "replaceById",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "204": {
            "description": "Record PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Record"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RecordController.replaceById"
      },
      "patch": {
        "x-controller-name": "RecordController",
        "x-operation-name": "updateById",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "204": {
            "description": "Record PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "RecordController.updateById"
      },
      "get": {
        "x-controller-name": "RecordController",
        "x-operation-name": "findById",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "200": {
            "description": "Record model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record.Filter"
                }
              }
            }
          }
        ],
        "operationId": "RecordController.findById"
      },
      "delete": {
        "x-controller-name": "RecordController",
        "x-operation-name": "deleteById",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "204": {
            "description": "Record DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "RecordController.deleteById"
      }
    },
    "/records": {
      "post": {
        "x-controller-name": "RecordController",
        "x-operation-name": "create",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "200": {
            "description": "Record model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRecord"
              }
            }
          }
        },
        "operationId": "RecordController.create"
      },
      "patch": {
        "x-controller-name": "RecordController",
        "x-operation-name": "updateAll",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "200": {
            "description": "Record PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Record.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Record>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPartial"
              }
            }
          }
        },
        "operationId": "RecordController.updateAll"
      },
      "get": {
        "x-controller-name": "RecordController",
        "x-operation-name": "find",
        "tags": [
          "RecordController"
        ],
        "responses": {
          "200": {
            "description": "Array of Record model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Record.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "RecordController.find"
      }
    },
    "/templates/count": {
      "get": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "count",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Template model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Template.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Template>"
                }
              }
            }
          }
        ],
        "operationId": "TemplateController.count"
      }
    },
    "/templates/{id}": {
      "put": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "replaceById",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "204": {
            "description": "Template PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TemplateController.replaceById"
      },
      "patch": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "updateById",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "204": {
            "description": "Template PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TemplateController.updateById"
      },
      "get": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "findById",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Template model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TemplateController.findById"
      },
      "delete": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "deleteById",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "204": {
            "description": "Template DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "TemplateController.deleteById"
      }
    },
    "/templates": {
      "post": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "create",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Template model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTemplate"
              }
            }
          }
        },
        "operationId": "TemplateController.create"
      },
      "patch": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "updateAll",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Template PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Template.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Template>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplatePartial"
              }
            }
          }
        },
        "operationId": "TemplateController.updateAll"
      },
      "get": {
        "x-controller-name": "TemplateController",
        "x-operation-name": "find",
        "tags": [
          "TemplateController"
        ],
        "responses": {
          "200": {
            "description": "Array of Template model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TemplateController.find"
      }
    },
    "/timeline-analyses/count": {
      "get": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "count",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "200": {
            "description": "TimelineAnalysis model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "TimelineAnalysis.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<TimelineAnalysis>"
                }
              }
            }
          }
        ],
        "operationId": "TlAnalysisController.count"
      }
    },
    "/timeline-analyses/{id}": {
      "put": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "replaceById",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "204": {
            "description": "TimelineAnalysis PUT success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimelineAnalysis"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TlAnalysisController.replaceById"
      },
      "patch": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "updateById",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "204": {
            "description": "TimelineAnalysis PATCH success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimelineAnalysisPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "TlAnalysisController.updateById"
      },
      "get": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "findById",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "200": {
            "description": "TimelineAnalysis model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineAnalysisWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineAnalysis.Filter"
                }
              }
            }
          }
        ],
        "operationId": "TlAnalysisController.findById"
      },
      "delete": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "deleteById",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "204": {
            "description": "TimelineAnalysis DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "TlAnalysisController.deleteById"
      }
    },
    "/timeline-analyses": {
      "post": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "create",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "200": {
            "description": "TimelineAnalysis model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineAnalysis"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTimelineAnalysis"
              }
            }
          }
        },
        "operationId": "TlAnalysisController.create"
      },
      "patch": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "updateAll",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "200": {
            "description": "TimelineAnalysis PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "TimelineAnalysis.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<TimelineAnalysis>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimelineAnalysisPartial"
              }
            }
          }
        },
        "operationId": "TlAnalysisController.updateAll"
      },
      "get": {
        "x-controller-name": "TlAnalysisController",
        "x-operation-name": "find",
        "tags": [
          "TlAnalysisController"
        ],
        "responses": {
          "200": {
            "description": "Array of TimelineAnalysis model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimelineAnalysisWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineAnalysis.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "TlAnalysisController.find"
      }
    },
    "/userinfo": {
      "get": {
        "x-controller-name": "UserController",
        "x-operation-name": "userinfo",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "UserInfo model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "UserController.userinfo"
      }
    },
    "/workspace-sessions/{id}": {
      "get": {
        "x-controller-name": "WorkspaceController",
        "x-operation-name": "findById",
        "tags": [
          "WorkspaceController"
        ],
        "responses": {
          "200": {
            "description": "WorkspaceSession model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceSessionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceSession.Filter"
                }
              }
            }
          }
        ],
        "operationId": "WorkspaceController.findById"
      },
      "delete": {
        "x-controller-name": "WorkspaceController",
        "x-operation-name": "deleteById",
        "tags": [
          "WorkspaceController"
        ],
        "responses": {
          "204": {
            "description": "WorkspaceSession DELETE success"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "WorkspaceController.deleteById"
      }
    },
    "/workspace-sessions": {
      "post": {
        "x-controller-name": "WorkspaceController",
        "x-operation-name": "getContainer",
        "tags": [
          "WorkspaceController"
        ],
        "responses": {
          "200": {
            "description": "WorkspaceSession model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceSession"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "enableTrack",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": true
          },
          {
            "name": "templateName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "operationId": "WorkspaceController.getContainer"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "Answer": {
        "title": "Answer",
        "properties": {
          "question": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "judge": {
            "type": "string"
          }
        },
        "required": [
          "question",
          "content",
          "user"
        ],
        "additionalProperties": false
      },
      "NewAnswer": {
        "title": "NewAnswer",
        "description": "(tsType: Omit<Answer, 'id'>, schemaOptions: { title: 'NewAnswer', exclude: [ 'id' ] })",
        "properties": {
          "question": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "judge": {
            "type": "string"
          }
        },
        "required": [
          "question",
          "content",
          "user"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Answer, 'id'>"
      },
      "AnswerWithRelations": {
        "title": "AnswerWithRelations",
        "description": "(tsType: AnswerWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "question": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "judge": {
            "type": "string"
          }
        },
        "required": [
          "question",
          "content",
          "user"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AnswerWithRelations"
      },
      "AnswerPartial": {
        "title": "AnswerPartial",
        "description": "(tsType: Partial<Answer>, schemaOptions: { partial: true })",
        "properties": {
          "question": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "judge": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Answer>"
      },
      "Question": {
        "title": "Question",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "brief": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "examination": {
            "type": "number"
          },
          "templateName": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "detail"
        ],
        "additionalProperties": false
      },
      "NewQuestion": {
        "title": "NewQuestion",
        "description": "(tsType: Omit<Question, 'id'>, schemaOptions: { title: 'NewQuestion', exclude: [ 'id' ] })",
        "properties": {
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "brief": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "examination": {
            "type": "number"
          },
          "templateName": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "detail"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Question, 'id'>"
      },
      "QuestionWithRelations": {
        "title": "QuestionWithRelations",
        "description": "(tsType: QuestionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "brief": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "examination": {
            "type": "number"
          },
          "templateName": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "detail"
        ],
        "additionalProperties": false,
        "x-typescript-type": "QuestionWithRelations"
      },
      "QuestionPartial": {
        "title": "QuestionPartial",
        "description": "(tsType: Partial<Question>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "score": {
            "type": "string"
          },
          "brief": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "examination": {
            "type": "number"
          },
          "templateName": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Question>"
      },
      "Record": {
        "title": "Record",
        "properties": {
          "answer": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "timeline": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "answer",
          "startTime",
          "endTime",
          "timeline"
        ],
        "additionalProperties": false
      },
      "NewRecord": {
        "title": "NewRecord",
        "description": "(tsType: Record, schemaOptions: { title: 'NewRecord' })",
        "properties": {
          "answer": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "timeline": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "answer",
          "startTime",
          "endTime",
          "timeline"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Record"
      },
      "RecordWithRelations": {
        "title": "RecordWithRelations",
        "description": "(tsType: RecordWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "answer": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "timeline": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "answer",
          "startTime",
          "endTime",
          "timeline"
        ],
        "additionalProperties": false,
        "x-typescript-type": "RecordWithRelations"
      },
      "RecordPartial": {
        "title": "RecordPartial",
        "description": "(tsType: Partial<Record>, schemaOptions: { partial: true })",
        "properties": {
          "answer": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          },
          "timeline": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Record>"
      },
      "Template": {
        "title": "Template",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "content"
        ],
        "additionalProperties": false
      },
      "NewTemplate": {
        "title": "NewTemplate",
        "description": "(tsType: Template, schemaOptions: { title: 'NewTemplate' })",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "content"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Template"
      },
      "TemplateWithRelations": {
        "title": "TemplateWithRelations",
        "description": "(tsType: TemplateWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "content"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TemplateWithRelations"
      },
      "TemplatePartial": {
        "title": "TemplatePartial",
        "description": "(tsType: Partial<Template>, schemaOptions: { partial: true })",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Template>"
      },
      "TlaTimelineItem": {
        "title": "TlaTimelineItem",
        "properties": {
          "action": {
            "type": "string"
          },
          "add": {
            "type": "number"
          },
          "del": {
            "type": "number"
          },
          "time": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "TlaResult": {
        "title": "TlaResult",
        "properties": {
          "add": {
            "type": "number"
          },
          "del": {
            "type": "number"
          },
          "timeline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TlaTimelineItem"
            }
          },
          "undo": {
            "type": "number"
          },
          "paste": {
            "type": "number"
          }
        },
        "additionalProperties": false
      },
      "TimelineAnalysis": {
        "title": "TimelineAnalysis",
        "properties": {
          "record": {
            "type": "number"
          },
          "finished": {
            "type": "boolean"
          },
          "result": {
            "$ref": "#/components/schemas/TlaResult"
          }
        },
        "required": [
          "record",
          "finished"
        ],
        "additionalProperties": false
      },
      "NewTimelineAnalysis": {
        "title": "NewTimelineAnalysis",
        "description": "(tsType: TimelineAnalysis, schemaOptions: { title: 'NewTimelineAnalysis' })",
        "properties": {
          "record": {
            "type": "number"
          },
          "finished": {
            "type": "boolean"
          },
          "result": {
            "$ref": "#/components/schemas/TlaResult"
          }
        },
        "required": [
          "record",
          "finished"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TimelineAnalysis"
      },
      "TlaTimelineItemWithRelations": {
        "title": "TlaTimelineItemWithRelations",
        "description": "(tsType: TlaTimelineItemWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "action": {
            "type": "string"
          },
          "add": {
            "type": "number"
          },
          "del": {
            "type": "number"
          },
          "time": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "TlaTimelineItemWithRelations"
      },
      "TlaResultWithRelations": {
        "title": "TlaResultWithRelations",
        "description": "(tsType: TlaResultWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "add": {
            "type": "number"
          },
          "del": {
            "type": "number"
          },
          "timeline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TlaTimelineItemWithRelations"
            }
          },
          "undo": {
            "type": "number"
          },
          "paste": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "TlaResultWithRelations"
      },
      "TimelineAnalysisWithRelations": {
        "title": "TimelineAnalysisWithRelations",
        "description": "(tsType: TimelineAnalysisWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "record": {
            "type": "number"
          },
          "finished": {
            "type": "boolean"
          },
          "result": {
            "$ref": "#/components/schemas/TlaResultWithRelations"
          }
        },
        "required": [
          "record",
          "finished"
        ],
        "additionalProperties": false,
        "x-typescript-type": "TimelineAnalysisWithRelations"
      },
      "TimelineAnalysisPartial": {
        "title": "TimelineAnalysisPartial",
        "description": "(tsType: Partial<TimelineAnalysis>, schemaOptions: { partial: true })",
        "properties": {
          "record": {
            "type": "number"
          },
          "finished": {
            "type": "boolean"
          },
          "result": {
            "$ref": "#/components/schemas/TlaResult"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<TimelineAnalysis>"
      },
      "UserInfo": {
        "title": "UserInfo",
        "properties": {
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "role"
        ],
        "additionalProperties": false
      },
      "WorkspaceSession": {
        "title": "WorkspaceSession",
        "properties": {
          "token": {
            "type": "string"
          },
          "containerID": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "projectArchive": {
            "type": "string"
          },
          "enableTrack": {
            "type": "boolean"
          }
        },
        "required": [
          "token",
          "enableTrack"
        ],
        "additionalProperties": false
      },
      "WorkspaceSessionWithRelations": {
        "title": "WorkspaceSessionWithRelations",
        "description": "(tsType: WorkspaceSessionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "token": {
            "type": "string"
          },
          "containerID": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "projectArchive": {
            "type": "string"
          },
          "enableTrack": {
            "type": "boolean"
          }
        },
        "required": [
          "token",
          "enableTrack"
        ],
        "additionalProperties": false,
        "x-typescript-type": "WorkspaceSessionWithRelations"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Answer.Fields": {
        "title": "Answer.Fields",
        "type": "object",
        "properties": {
          "question": {
            "type": "boolean"
          },
          "id": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          },
          "user": {
            "type": "boolean"
          },
          "judge": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Answer.Filter": {
        "type": "object",
        "title": "Answer.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/Answer.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Answer>"
      },
      "Answer.Filter1": {
        "type": "object",
        "title": "Answer.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "where": {
            "title": "Answer.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "$ref": "#/components/schemas/Answer.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Answer>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Question.Fields": {
        "title": "Question.Fields",
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "author": {
            "type": "boolean"
          },
          "score": {
            "type": "boolean"
          },
          "brief": {
            "type": "boolean"
          },
          "detail": {
            "type": "boolean"
          },
          "examples": {
            "type": "boolean"
          },
          "examination": {
            "type": "boolean"
          },
          "templateName": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Question.Filter": {
        "type": "object",
        "title": "Question.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/Question.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Question>"
      },
      "Question.Filter1": {
        "type": "object",
        "title": "Question.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "where": {
            "title": "Question.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "$ref": "#/components/schemas/Question.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Question>"
      },
      "Record.Fields": {
        "title": "Record.Fields",
        "type": "object",
        "properties": {
          "answer": {
            "type": "boolean"
          },
          "startTime": {
            "type": "boolean"
          },
          "endTime": {
            "type": "boolean"
          },
          "timeline": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Record.Filter": {
        "type": "object",
        "title": "Record.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/Record.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Record>"
      },
      "Record.Filter1": {
        "type": "object",
        "title": "Record.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "where": {
            "title": "Record.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "$ref": "#/components/schemas/Record.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Record>"
      },
      "Template.Fields": {
        "title": "Template.Fields",
        "type": "object",
        "properties": {
          "name": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Template.Filter": {
        "type": "object",
        "title": "Template.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/Template.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Template>"
      },
      "Template.Filter1": {
        "type": "object",
        "title": "Template.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "where": {
            "title": "Template.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "$ref": "#/components/schemas/Template.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Template>"
      },
      "TimelineAnalysis.Fields": {
        "title": "TimelineAnalysis.Fields",
        "type": "object",
        "properties": {
          "record": {
            "type": "boolean"
          },
          "finished": {
            "type": "boolean"
          },
          "result": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TimelineAnalysis.Filter": {
        "type": "object",
        "title": "TimelineAnalysis.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/TimelineAnalysis.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<TimelineAnalysis>"
      },
      "TimelineAnalysis.Filter1": {
        "type": "object",
        "title": "TimelineAnalysis.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "where": {
            "title": "TimelineAnalysis.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "$ref": "#/components/schemas/TimelineAnalysis.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<TimelineAnalysis>"
      },
      "WorkspaceSession.Fields": {
        "title": "WorkspaceSession.Fields",
        "type": "object",
        "properties": {
          "token": {
            "type": "boolean"
          },
          "containerID": {
            "type": "boolean"
          },
          "address": {
            "type": "boolean"
          },
          "projectArchive": {
            "type": "boolean"
          },
          "enableTrack": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorkspaceSession.Filter": {
        "type": "object",
        "title": "WorkspaceSession.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/WorkspaceSession.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<WorkspaceSession>"
      }
    }
  }
}